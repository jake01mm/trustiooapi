{
	"info": {
		"_postman_id": "user-auth-collection-id",
		"name": "Trusioo User Auth API",
		"description": "Trusioo 用户认证 API 集合，包含用户注册、登录、验证、令牌刷新和个人信息管理等功能",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "用户认证",
			"description": "用户注册和登录相关接口",
			"item": [
				{
					"name": "用户注册",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"email\": \"{{user_email}}\",\n  \"password\": \"{{user_password}}\",\n  \"phone\": \"{{user_phone}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "register"]
						},
						"description": "用户注册接口，创建新用户账户"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Response has required fields', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('data');",
									"    pm.expect(responseJson).to.have.property('message');",
									"    pm.expect(responseJson.data).to.have.property('user_id');",
									"});",
									"",
									"// 保存用户ID到环境变量",
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.user_id) {",
									"        pm.environment.set('user_id', responseJson.data.user_id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "用户登录 - 第一步",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\",\n  \"password\": \"{{user_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "login"]
						},
						"description": "用户登录第一步，发送邮箱和密码，获取登录验证码"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has required fields', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('data');",
									"    pm.expect(responseJson).to.have.property('message');",
									"    pm.expect(responseJson.data).to.have.property('login_code');",
									"    pm.expect(responseJson.data).to.have.property('expires_in');",
									"});",
									"",
									"// 保存登录验证码到环境变量",
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.login_code) {",
									"        pm.environment.set('user_login_code', responseJson.data.login_code);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "用户登录 - 第二步（验证码验证）",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\",\n  \"login_code\": \"{{user_login_code}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login/verify",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "login", "verify"]
						},
						"description": "用户登录第二步，验证登录验证码，获取访问令牌"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has required fields', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('data');",
									"    pm.expect(responseJson.data).to.have.property('access_token');",
									"    pm.expect(responseJson.data).to.have.property('refresh_token');",
									"    pm.expect(responseJson.data).to.have.property('user');",
									"});",
									"",
									"// 保存令牌和用户信息到环境变量",
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data) {",
									"        pm.environment.set('user_access_token', responseJson.data.access_token);",
									"        pm.environment.set('user_refresh_token', responseJson.data.refresh_token);",
									"        if (responseJson.data.user) {",
									"            pm.environment.set('user_id', responseJson.data.user.id);",
									"            pm.environment.set('user_name', responseJson.data.user.name);",
									"            pm.environment.set('user_email', responseJson.data.user.email);",
									"        }",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "令牌管理",
			"description": "访问令牌刷新相关接口",
			"item": [
				{
					"name": "刷新访问令牌",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"{{user_refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/refresh",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "refresh"]
						},
						"description": "使用刷新令牌获取新的访问令牌"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has required fields', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('data');",
									"    pm.expect(responseJson.data).to.have.property('access_token');",
									"    pm.expect(responseJson.data).to.have.property('refresh_token');",
									"});",
									"",
									"// 更新环境变量中的令牌",
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data) {",
									"        pm.environment.set('user_access_token', responseJson.data.access_token);",
									"        pm.environment.set('user_refresh_token', responseJson.data.refresh_token);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "用户信息",
			"description": "用户个人信息管理接口",
			"item": [
				{
					"name": "获取用户个人信息",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/profile",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "profile"]
						},
						"description": "获取当前登录用户的个人信息"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has user data', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('data');",
									"    pm.expect(responseJson.data).to.have.property('id');",
									"    pm.expect(responseJson.data).to.have.property('name');",
									"    pm.expect(responseJson.data).to.have.property('email');",
									"    pm.expect(responseJson.data).to.have.property('status');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// 全局预请求脚本",
					"console.log('执行请求:', pm.info.requestName);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// 全局测试脚本",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}