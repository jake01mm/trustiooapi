{
	"info": {
		"_postman_id": "card-detection-api-collection",
		"name": "Trusioo Card Detection API",
		"description": "Trusioo 卡片检测 API 接口集合（基于实际测试验证）\n\n## 功能模块\n\n### 1. 认证接口\n- 用户注册\n- 发送验证码\n- 验证激活码\n- 用户登录\n- 登录验证\n\n### 2. 卡片检测核心功能\n- 获取支持的产品列表\n- 获取支持的地区列表\n- 提交卡片检测\n- 查询检测结果\n\n### 3. 历史记录与统计\n- 获取用户检测历史\n- 获取检测记录详情\n- 获取用户统计信息\n- 获取用户汇总信息\n\n## 认证说明\n\n所有卡片检测接口都需要在请求头中包含 Bearer Token：\n```\nAuthorization: Bearer {{access_token}}\n```\n\n## 环境变量\n\n请确保设置以下环境变量：\n- `base_url`: API 基础地址 (默认: http://localhost:8081)\n- `access_token`: 用户访问令牌\n- `test_email`: 测试用户邮箱\n- `test_password`: 测试用户密码\n- `verification_code`: 验证码",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "认证接口",
			"description": "用户注册、登录和验证相关接口",
			"item": [
				{
					"name": "用户注册",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Registration successful', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('code', 200);",
									"    pm.expect(responseJson).to.have.property('message', 'success');",
									"    pm.expect(responseJson.data).to.have.property('user');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{"key": "Content-Type", "value": "application/json"}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\",\n  \"username\": \"cardtester\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "register"]
						},
						"description": "注册新用户账户"
					}
				},
				{
					"name": "发送注册验证码",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Verification code sent', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('code', 200);",
									"    pm.expect(responseJson.data).to.have.property('code');",
									"    // 自动保存验证码到环境变量",
									"    pm.environment.set('verification_code', responseJson.data.code);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{"key": "Content-Type", "value": "application/json"}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"target\": \"{{test_email}}\",\n  \"type\": \"register\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/verification/send",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "verification", "send"]
						},
						"description": "发送注册验证码以激活账户"
					}
				},
				{
					"name": "验证注册码",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Verification successful', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('code', 200);",
									"    pm.expect(responseJson.data).to.have.property('valid', true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{"key": "Content-Type", "value": "application/json"}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"target\": \"{{test_email}}\",\n  \"type\": \"register\",\n  \"code\": \"{{verification_code}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/verification/verify",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "verification", "verify"]
						},
						"description": "验证注册码并激活账户"
					}
				},
				{
					"name": "用户登录",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Login code sent', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('code', 200);",
									"    pm.expect(responseJson.data).to.have.property('message');",
									"    pm.expect(responseJson.data).to.have.property('login_code');",
									"    // 自动保存登录验证码",
									"    pm.environment.set('login_verification_code', responseJson.data.login_code);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{"key": "Content-Type", "value": "application/json"}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "login"]
						},
						"description": "用户登录（会发送登录验证码）"
					}
				},
				{
					"name": "完成登录验证",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Login successful', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('code', 200);",
									"    pm.expect(responseJson.data).to.have.property('access_token');",
									"    // 自动保存访问令牌",
									"    pm.environment.set('access_token', responseJson.data.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{"key": "Content-Type", "value": "application/json"}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"code\": \"{{login_verification_code}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login/verify",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "login", "verify"]
						},
						"description": "使用验证码完成登录并获取访问令牌"
					}
				}
			]
		},
		{
			"name": "卡片检测核心功能",
			"description": "卡片检测的核心功能接口",
			"item": [
				{
					"name": "获取支持的产品列表",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Products data is valid', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('code', 200);",
									"    pm.expect(responseJson.data).to.have.property('products');",
									"    pm.expect(responseJson.data.products).to.be.an('array');",
									"    pm.expect(responseJson.data).to.have.property('total');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{"key": "Authorization", "value": "Bearer {{access_token}}"}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/card-detection/cd_products",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "card-detection", "cd_products"]
						},
						"description": "获取支持的卡片产品列表"
					}
				},
				{
					"name": "获取支持的地区列表",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Regions data is valid', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('code', 200);",
									"    pm.expect(responseJson.data).to.have.property('regions');",
									"    pm.expect(responseJson.data.regions).to.be.an('array');",
									"    pm.expect(responseJson.data).to.have.property('total');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{"key": "Authorization", "value": "Bearer {{access_token}}"}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/card-detection/cd_regions",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "card-detection", "cd_regions"],
							"query": [
								{"key": "product_mark", "value": "iTunes", "description": "可选：过滤特定产品的地区", "disabled": true}
							]
						},
						"description": "获取支持的地区列表，可按产品过滤"
					}
				},
				{
					"name": "提交卡片检测",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200 or 500', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 500]);",
									"});",
									"pm.test('Response has correct structure', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('code');",
									"    pm.expect(responseJson).to.have.property('message');",
									"    // 500错误是正常的，因为卡片检测服务可能未配置",
									"    if (responseJson.code === 500) {",
									"        console.log('卡片检测服务未配置，返回500错误是正常的');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{"key": "Authorization", "value": "Bearer {{access_token}}"},
							{"key": "Content-Type", "value": "application/json"}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cards\": [\"1234-5678-9012-3456\"],\n  \"productMark\": \"iTunes\",\n  \"regionId\": 1,\n  \"regionName\": \"United States\",\n  \"autoType\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/card-detection/check",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "card-detection", "check"]
						},
						"description": "提交卡片检测请求"
					}
				},
				{
					"name": "查询检测结果",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200 or 500', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 500]);",
									"});",
									"pm.test('Response has correct structure', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('code');",
									"    pm.expect(responseJson).to.have.property('message');",
									"    // 500错误是正常的，因为卡片检测服务可能未配置",
									"    if (responseJson.code === 500) {",
									"        console.log('卡片检测服务未配置，返回500错误是正常的');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{"key": "Authorization", "value": "Bearer {{access_token}}"},
							{"key": "Content-Type", "value": "application/json"}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productMark\": \"iTunes\",\n  \"cardNo\": \"1234-5678-9012-3456\",\n  \"pinCode\": \"1234\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/card-detection/result",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "card-detection", "result"]
						},
						"description": "查询卡片检测结果"
					}
				}
			]
		},
		{
			"name": "历史记录与统计",
			"description": "用户检测历史记录和统计信息",
			"item": [
				{
					"name": "获取用户检测历史",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('History data is valid', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('code', 200);",
									"    pm.expect(responseJson.data).to.have.property('records');",
									"    pm.expect(responseJson.data).to.have.property('pagination');",
									"    pm.expect(responseJson.data).to.have.property('summary');",
									"    pm.expect(responseJson.data.records).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{"key": "Authorization", "value": "Bearer {{access_token}}"}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/card-detection/history?page=1&page_size=10",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "card-detection", "history"],
							"query": [
								{"key": "page", "value": "1", "description": "页码（必需）"},
								{"key": "page_size", "value": "10", "description": "每页数量（必需）"},
								{"key": "status", "value": "", "description": "过滤状态（可选）", "disabled": true},
								{"key": "product_mark", "value": "", "description": "过滤产品（可选）", "disabled": true},
								{"key": "card_number", "value": "", "description": "过滤卡号（可选）", "disabled": true}
							]
						},
						"description": "获取用户的卡片检测历史记录"
					}
				},
				{
					"name": "获取检测记录详情",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200 or 404', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});",
									"pm.test('Response has correct structure', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('code');",
									"    pm.expect(responseJson).to.have.property('message');",
									"    if (responseJson.code === 200) {",
									"        pm.expect(responseJson.data).to.have.property('id');",
									"        pm.expect(responseJson.data).to.have.property('card_number');",
									"        pm.expect(responseJson.data).to.have.property('product_mark');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{"key": "Authorization", "value": "Bearer {{access_token}}"}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/card-detection/records/1",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "card-detection", "records", "1"]
						},
						"description": "获取单个检测记录的详细信息"
					}
				},
				{
					"name": "获取用户统计信息",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Stats data is valid', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('code', 200);",
									"    pm.expect(responseJson.data).to.have.property('summary');",
									"    pm.expect(responseJson.data).to.have.property('product_stats');",
									"    pm.expect(responseJson.data).to.have.property('monthly_stats');",
									"    pm.expect(responseJson.data).to.have.property('recent_checks');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{"key": "Authorization", "value": "Bearer {{access_token}}"}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/card-detection/stats",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "card-detection", "stats"]
						},
						"description": "获取用户的检测统计信息"
					}
				},
				{
					"name": "获取用户汇总信息",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Summary data is valid', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('code', 200);",
									"    pm.expect(responseJson.data).to.have.property('total_checks');",
									"    pm.expect(responseJson.data).to.have.property('success_checks');",
									"    pm.expect(responseJson.data).to.have.property('success_rate');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{"key": "Authorization", "value": "Bearer {{access_token}}"}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/card-detection/summary",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "card-detection", "summary"]
						},
						"description": "获取用户的检测汇总信息"
					}
				}
			]
		}
	]
}