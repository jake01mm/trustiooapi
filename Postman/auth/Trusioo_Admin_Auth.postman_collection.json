{
	"info": {
		"_postman_id": "admin-auth-collection-v1",
		"name": "Trusioo Admin Auth API",
		"description": "Trusioo 管理员认证和用户管理 API 集合\n\n## 功能模块\n- 管理员认证（登录、验证、刷新令牌）\n- 管理员个人信息管理\n- 用户管理（统计、列表、详情）\n\n## 使用说明\n1. 首先执行管理员登录获取验证码\n2. 使用验证码完成登录验证获取 token\n3. 后续请求会自动使用保存的 token\n4. Token 过期时会自动刷新\n\n## 环境变量\n- `base_url`: API 基础地址\n- `admin_access_token`: 管理员访问令牌\n- `admin_refresh_token`: 管理员刷新令牌\n- `admin_email`: 管理员邮箱\n- `admin_password`: 管理员密码",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "管理员认证",
			"description": "管理员登录、验证和令牌管理相关接口",
			"item": [
				{
					"name": "管理员登录 - 第一步",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has required fields', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('data');",
									"    pm.expect(responseJson.data).to.have.property('login_code');",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.login_code) {",
									"        pm.environment.set('admin_login_code', responseJson.data.login_code);",
									"        console.log('Admin login code saved:', responseJson.data.login_code);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"password\": \"{{admin_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/admin/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "admin", "auth", "login"]
						},
						"description": "管理员登录第一步：验证邮箱和密码，系统会发送验证码到管理员邮箱"
					}
				},
				{
					"name": "管理员登录 - 第二步（验证码验证）",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data) {",
									"        pm.environment.set('admin_access_token', responseJson.data.access_token);",
									"        pm.environment.set('admin_refresh_token', responseJson.data.refresh_token);",
									"        console.log('Admin tokens saved successfully');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"code\": \"{{admin_login_code}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/admin/auth/login/verify",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "admin", "auth", "login", "verify"]
						},
						"description": "管理员登录第二步：使用验证码完成登录验证"
					}
				},
				{
					"name": "刷新访问令牌",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data) {",
									"        pm.environment.set('admin_access_token', responseJson.data.access_token);",
									"        pm.environment.set('admin_refresh_token', responseJson.data.refresh_token);",
									"        console.log('Admin tokens refreshed successfully');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"{{admin_refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/admin/auth/refresh",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "admin", "auth", "refresh"]
						},
						"description": "刷新管理员访问令牌"
					}
				}
			]
		},
		{
			"name": "管理员个人信息",
			"description": "管理员个人信息管理相关接口",
			"item": [
				{
					"name": "获取管理员个人信息",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has admin data', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('data');",
									"    pm.expect(responseJson.data).to.have.property('id');",
									"    pm.expect(responseJson.data).to.have.property('name');",
									"    pm.expect(responseJson.data).to.have.property('email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/admin/profile",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "admin", "profile"]
						},
						"description": "获取当前登录管理员的个人信息"
					}
				}
			]
		},
		{
			"name": "用户管理",
			"description": "用户管理相关接口",
			"item": [
				{
					"name": "获取用户统计信息",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has stats data', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('data');",
									"    pm.expect(responseJson.data).to.have.property('total_users');",
									"    pm.expect(responseJson.data).to.have.property('active_users');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/admin/users/stats",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "admin", "users", "stats"]
						},
						"description": "获取用户统计信息"
					}
				},
				{
					"name": "获取用户列表",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has users data', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('data');",
									"    pm.expect(responseJson.data).to.have.property('users');",
									"    pm.expect(responseJson.data).to.have.property('total');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/admin/users?page=1&page_size=20&status=all",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "admin", "users"],
							"query": [
								{"key": "page", "value": "1"},
								{"key": "page_size", "value": "20"},
								{"key": "status", "value": "all"}
							]
						},
						"description": "获取用户列表"
					}
				},
				{
					"name": "获取用户详情",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has user data', function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('data');",
									"    pm.expect(responseJson.data).to.have.property('id');",
									"    pm.expect(responseJson.data).to.have.property('email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/admin/users/{{user_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "admin", "users", "{{user_id}}"]
						},
						"description": "获取指定用户的详细信息"
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// 全局预请求脚本",
					"// 检查是否需要刷新 token",
					"const accessToken = pm.environment.get('admin_access_token');",
					"if (!accessToken) {",
					"    console.log('No access token found. Please login first.');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// 全局测试脚本",
					"// 检查是否需要刷新 token",
					"if (pm.response.code === 401) {",
					"    console.log('Token expired. Please refresh token or login again.');",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "admin_email",
			"value": "admin@example.com",
			"type": "string"
		},
		{
			"key": "admin_password",
			"value": "admin123",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "1",
			"type": "string"
		}
	]
}